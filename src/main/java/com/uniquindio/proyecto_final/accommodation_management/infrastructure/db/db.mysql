INSERT INTO roles (name, active, created_at, updated_at) VALUES
('Administrador', true, NOW(), NOW()),
('Anfitrión', true, NOW(), NOW()),
('Usuario', true, NOW(), NOW());

INSERT INTO departments (name, active, created_at, updated_at) VALUES
('Amazonas', true, NOW(), NOW()),
('Antioquia', true, NOW(), NOW()),
('Arauca', true, NOW(), NOW()),
('Atlántico', true, NOW(), NOW()),
('Bogotá', true, NOW(), NOW()),
('Bolívar', true, NOW(), NOW()),
('Boyacá', true, NOW(), NOW()),
('Caldas', true, NOW(), NOW()),
('Caquetá', true, NOW(), NOW()),
('Casanare', true, NOW(), NOW());

-- Amazonas
INSERT INTO cities (name, departments_id, active, created_at, updated_at) VALUES
('Leticia', 1, true, NOW(), NOW());

-- Antioquia
INSERT INTO cities (name, departments_id, active, created_at, updated_at) VALUES
('Medellín', 2, true, NOW(), NOW()),
('Envigado', 2, true, NOW(), NOW()),
('Bello', 2, true, NOW(), NOW());

-- Bogotá
INSERT INTO cities (name, departments_id, active, created_at, updated_at) VALUES
('Bogotá D.C.', 5, true, NOW(), NOW());

-- Atlántico
INSERT INTO cities (name, departments_id, active, created_at, updated_at) VALUES
('Barranquilla', 4, true, NOW(), NOW()),
('Soledad', 4, true, NOW(), NOW());

-- Bolívar
INSERT INTO cities (name, departments_id, active, created_at, updated_at) VALUES
('Cartagena', 6, true, NOW(), NOW());

DROP TABLE IF EXISTS accommodation_service;
DROP TABLE IF EXISTS responses;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS reservations;
DROP TABLE IF EXISTS accommodations;
DROP TABLE IF EXISTS administrators;
DROP TABLE IF EXISTS hosts;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS cities;
DROP TABLE IF EXISTS departments;
DROP TABLE IF EXISTS services;
DROP TABLE IF EXISTS roles;

CREATE TABLE IF NOT EXISTS departments (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS cities (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    departments_id INT NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id)
);

CREATE TABLE IF NOT EXISTS roles (
    id INT AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS services (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS administrators (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    surname VARCHAR(75) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(200) NOT NULL,
    created_at DATETIME,
    updated_at DATETIME,
    roles_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (roles_id) REFERENCES roles(id)
);

CREATE TABLE IF NOT EXISTS hosts (
    id INT AUTO_INCREMENT,
    name VARCHAR(150) NOT NULL,
    surname VARCHAR(75) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(200) NOT NULL,
    phone VARCHAR(30) NOT NULL,
    birthday DATETIME NOT NULL,
    img_url LONGBLOB NOT NULL,
    roles_id INT NOT NULL,
    personal_description LONGTEXT NOT NULL,
    departments_id INT NOT NULL,
    cities_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    active CHAR(1) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id),
    FOREIGN KEY (cities_id) REFERENCES cities(id),
    FOREIGN KEY (roles_id) REFERENCES roles(id)
);

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT,
    name VARCHAR(150) NOT NULL,
    surname VARCHAR(75) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(200) NOT NULL,
    phone VARCHAR(30) NOT NULL,
    birthday DATETIME NOT NULL,
    img_url LONGBLOB NOT NULL,
    roles_id INT NOT NULL,
    departments_id INT NOT NULL,
    cities_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    active CHAR(1) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id),
    FOREIGN KEY (cities_id) REFERENCES cities(id),
    FOREIGN KEY (roles_id) REFERENCES roles(id)
);

CREATE TABLE IF NOT EXISTS accommodations (
    id INT AUTO_INCREMENT,
    img_url LONGBLOB NOT NULL,
    detailed_description LONGTEXT NOT NULL,
    direction VARCHAR(150) NOT NULL,
    exact_location VARCHAR(150) NOT NULL,
    price INT NOT NULL,
    maximum_capacity INT NOT NULL,
    hosts_id INT NOT NULL,
    available CHAR(1) NOT NULL,
    departments_id INT NOT NULL,
    cities_id INT NOT NULL,
    services LONGTEXT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    active CHAR(1) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id),
    FOREIGN KEY (cities_id) REFERENCES cities(id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id)
);

CREATE TABLE IF NOT EXISTS accommodation_service (
    id INT AUTO_INCREMENT,
    accommodations_id INT NOT NULL,
    services_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (services_id) REFERENCES services(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id INT AUTO_INCREMENT,
    content TEXT NOT NULL,
    accommodations_id INT NOT NULL,
    users_id INT NOT NULL,
    date DATETIME NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (users_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS responses (
    id INT AUTO_INCREMENT,
    content TEXT NOT NULL,
    hosts_id INT NOT NULL,
    comments_id INT NOT NULL,
    date DATETIME NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (comments_id) REFERENCES comments(id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id)
);

CREATE TABLE IF NOT EXISTS reservations (
    id INT AUTO_INCREMENT,
    check_in DATETIME NOT NULL,
    check_out DATETIME NOT NULL,
    number_guests INT NOT NULL,
    state VARCHAR(50) NOT NULL,
    accommodations_id INT NOT NULL,
    hosts_id INT NOT NULL,
    users_id INT NOT NULL,
    calification INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id),
    FOREIGN KEY (users_id) REFERENCES users(id)
);