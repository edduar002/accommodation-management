DROP TABLE IF EXISTS accommodation_service;
DROP TABLE IF EXISTS accommodations_images;
DROP TABLE IF EXISTS responses;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS reservations;
DROP TABLE IF EXISTS favorite_accommodation;
DROP TABLE IF EXISTS favorites;
DROP TABLE IF EXISTS legal_documents;
DROP TABLE IF EXISTS accommodations;
DROP TABLE IF EXISTS administrators;
DROP TABLE IF EXISTS hosts;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS cities;
DROP TABLE IF EXISTS departments;
DROP TABLE IF EXISTS services;
DROP TABLE IF EXISTS images;
DROP TABLE IF EXISTS qualifications;
DROP TABLE IF EXISTS roles;

CREATE TABLE IF NOT EXISTS departments (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS cities (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    departments_id INT NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id)
);

CREATE TABLE IF NOT EXISTS roles (
    id INT AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS services (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS images (
    id INT AUTO_INCREMENT,
    img_url VARCHAR(150) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS qualifications (
    id INT AUTO_INCREMENT,
    number_stars INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS administrators (
    id INT AUTO_INCREMENT,
    name VARCHAR(75) NOT NULL,
    surname VARCHAR(75) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    created_at DATETIME,
    updated_at DATETIME,
    roles_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (roles_id) REFERENCES roles(id)
);

CREATE TABLE IF NOT EXISTS hosts (
    id INT AUTO_INCREMENT,
    name VARCHAR(150) NOT NULL,
    surname VARCHAR(75) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    phone VARCHAR(30) NOT NULL,
    birthday DATETIME NOT NULL,
    img_url LONGBLOB NOT NULL,
    roles_id INT NOT NULL,
    personal_description LONGTEXT NOT NULL,
    departments_id INT NOT NULL,
    cities_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    active CHAR(1) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id),
    FOREIGN KEY (cities_id) REFERENCES cities(id),
    FOREIGN KEY (roles_id) REFERENCES roles(id)
);

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT,
    name VARCHAR(150) NOT NULL,
    surname VARCHAR(75) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    phone VARCHAR(30) NOT NULL,
    birthday DATETIME NOT NULL,
    img_url LONGBLOB NOT NULL,
    roles_id INT NOT NULL,
    departments_id INT NOT NULL,
    cities_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    active CHAR(1) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id),
    FOREIGN KEY (cities_id) REFERENCES cities(id),
    FOREIGN KEY (roles_id) REFERENCES roles(id)
);

CREATE TABLE IF NOT EXISTS accommodations (
    id INT AUTO_INCREMENT,
    detailed_description LONGTEXT NOT NULL,
    direction VARCHAR(150) NOT NULL,
    exact_location VARCHAR(150) NOT NULL,
    price INT NOT NULL,
    maximum_capacity INT NOT NULL,
    hosts_id INT NOT NULL,
    available CHAR(1) NOT NULL,
    qualifications_id INT NULL,
    departments_id INT NOT NULL,
    cities_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    active CHAR(1) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (departments_id) REFERENCES departments(id),
    FOREIGN KEY (cities_id) REFERENCES cities(id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id),
    FOREIGN KEY (qualifications_id) REFERENCES qualifications(id)
);

CREATE TABLE IF NOT EXISTS favorites (
    id INT AUTO_INCREMENT,
    active CHAR(1) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    user_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS legal_documents (
    id INT AUTO_INCREMENT,
    url_document VARCHAR(150) NOT NULL,
    hosts_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id)
);

CREATE TABLE IF NOT EXISTS accommodation_service (
    id INT AUTO_INCREMENT,
    accommodations_id INT NOT NULL,
    services_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (services_id) REFERENCES services(id)
);

CREATE TABLE IF NOT EXISTS accommodations_images (
    id INT AUTO_INCREMENT,
    accommodations_id INT NOT NULL,
    images_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (images_id) REFERENCES images(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id INT AUTO_INCREMENT,
    content TEXT NOT NULL,
    accommodations_id INT NOT NULL,
    users_id INT NOT NULL,
    date DATETIME NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (users_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS responses (
    id INT AUTO_INCREMENT,
    content TEXT NOT NULL,
    hosts_id INT NOT NULL,
    comments_id INT NOT NULL,
    date DATETIME NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (comments_id) REFERENCES comments(id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id)
);

CREATE TABLE IF NOT EXISTS reservations (
    id INT AUTO_INCREMENT,
    check_in DATETIME NOT NULL,
    check_out DATETIME NOT NULL,
    number_guests INT NOT NULL,
    state VARCHAR(50) NOT NULL,
    accommodations_id INT NOT NULL,
    hosts_id INT NOT NULL,
    users_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (hosts_id) REFERENCES hosts(id),
    FOREIGN KEY (users_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS favorite_accommodation (
    id INT AUTO_INCREMENT,
    active CHAR(1) NOT NULL,
    favorites_id INT NOT NULL,
    accommodations_id INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (accommodations_id) REFERENCES accommodations(id),
    FOREIGN KEY (favorites_id) REFERENCES favorites(id)
);